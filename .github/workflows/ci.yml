name: LowlandTech.Core Build, Pack, and Publish

on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - release/*
      - hotfix/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code with full history to avoid shallow clone issues
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the entire git history

      # Setup .NET 8.0
      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # Install GitVersion to calculate the version
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: '6.x'
        id: gitversion

      # Update version in .csproj file with the calculated version from GitVersion
      - name: Update version in .csproj
        run: |
          GITVERSION_VERSION=$(echo "${{ steps.gitversion.outputs.semVer }}" | sed 's/-/./g')
          echo "Updating .csproj with version $GITVERSION_VERSION"
          sed -i "s|<Version>.*</Version>|<Version>${GITVERSION_VERSION}</Version>|g" src/lowlandtech.core/LowlandTech.Core.csproj

      # Restore .NET dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the .NET project
      - name: Build project
        run: dotnet build --no-restore --configuration Release

      # Pack the project into a NuGet package
      - name: Pack the project
        run: dotnet pack src/lowlandtech/core --no-build --configuration Release -o ./nuget

      # Publish the NuGet package (only on the main branch)
      - name: Publish NuGet package
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push ./nuget/*.nupkg --source https://nuget.pkg.github.com/lowlandtech/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
